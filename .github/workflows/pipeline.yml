name: Deploymnet Pipeline

on:
  push:
    branches: [develop]

jobs:

  build-and-push:
    name: build and push image
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:${{ github.sha }}, ${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:latest
          cache-from: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKER_USERNAME }}/${{ secrets.DOCKER_REPOSITORY }}:buildcache,mode=max

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    
    steps:
      - uses: actions/checkout@v2 
      - name: Deploy in EC2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_PRIVATE_KEY }}
          HOSTNAME: ${{ secrets.AWS_HOSTNAME }}
          USER_NAME: ${{ secrets.AWS_USERNAME }}
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_REPOSITORY: ${{ secrets.DOCKER_REPOSITORY }}
          PORT: ${{ secrets.PORT }}

        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 400 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} << EOF
            #Now we have got the access of EC2 and we will start the deploy .

            docker --version
            docker pull ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:latest
            docker stop ${DOCKER_REPOSITORY} || true
            docker rm ${DOCKER_REPOSITORY} || true
            docker run -p ${PORT}:${PORT} --env-file ./.env.development -d --restart unless-stopped --hostname ${DOCKER_REPOSITORY} --name ${DOCKER_REPOSITORY} ${DOCKER_USERNAME}/${DOCKER_REPOSITORY}:latest

          EOF